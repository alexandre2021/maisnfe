{
  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "esnext"], // Inclui bibliotecas padrão do DOM e ESNext.
    "allowJs": true, // Permite usar arquivos .js junto com .ts e .tsx.
    "skipLibCheck": true, // Ignora a verificação de tipos em arquivos de biblioteca .d.ts para acelerar a compilação.
    "strict": true, // Habilita todas as verificações de tipo estritas.
    "noEmit": true, // Não gera arquivos .js de saída, útil quando usado com Next.js.
    "esModuleInterop": true, // Garante a interoperabilidade entre módulos CommonJS e ESModules.
    "module": "esnext", // Define o módulo como ESNext para suportar importações dinâmicas e outros recursos modernos.
    "moduleResolution": "bundler", // Usa resolução de módulo compatível com bundlers como Webpack ou esbuild.
    "resolveJsonModule": true, // Permite a importação de arquivos .json.
    "isolatedModules": true, // Exige que cada arquivo seja tratado como um módulo separado, útil para compilação incremental.
    "jsx": "preserve", // Preserva o JSX para que o Next.js possa processá-lo.
    "incremental": true, // Ativa a compilação incremental para melhorar a performance da recompilação.
    "plugins": [
      {
        "name": "next" // Adiciona o plugin Next.js para suporte aprimorado de TypeScript no ambiente Next.js.
      }
    ],
    "paths": {
      "@/*": ["./*"] // Configura o alias @ para apontar para a raiz do projeto.
    },
    "types": ["node", "react", "react-dom"] // Adicione explicitamente os tipos que você deseja incluir.
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"], // Inclui todos os arquivos TypeScript e os tipos gerados automaticamente pelo Next.js.
  "exclude": ["node_modules"] // Exclui a pasta node_modules para evitar conflitos de tipo.
}

